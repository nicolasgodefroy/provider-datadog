//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentRuleInitParameters) DeepCopyInto(out *AgentRuleInitParameters) {
	*out = *in
	if in.AgentRuleID != nil {
		in, out := &in.AgentRuleID, &out.AgentRuleID
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentRuleInitParameters.
func (in *AgentRuleInitParameters) DeepCopy() *AgentRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(AgentRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentRuleObservation) DeepCopyInto(out *AgentRuleObservation) {
	*out = *in
	if in.AgentRuleID != nil {
		in, out := &in.AgentRuleID, &out.AgentRuleID
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentRuleObservation.
func (in *AgentRuleObservation) DeepCopy() *AgentRuleObservation {
	if in == nil {
		return nil
	}
	out := new(AgentRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentRuleParameters) DeepCopyInto(out *AgentRuleParameters) {
	*out = *in
	if in.AgentRuleID != nil {
		in, out := &in.AgentRuleID, &out.AgentRuleID
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentRuleParameters.
func (in *AgentRuleParameters) DeepCopy() *AgentRuleParameters {
	if in == nil {
		return nil
	}
	out := new(AgentRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CaseInitParameters) DeepCopyInto(out *CaseInitParameters) {
	*out = *in
	if in.Notifications != nil {
		in, out := &in.Notifications, &out.Notifications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CaseInitParameters.
func (in *CaseInitParameters) DeepCopy() *CaseInitParameters {
	if in == nil {
		return nil
	}
	out := new(CaseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CaseObservation) DeepCopyInto(out *CaseObservation) {
	*out = *in
	if in.Notifications != nil {
		in, out := &in.Notifications, &out.Notifications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CaseObservation.
func (in *CaseObservation) DeepCopy() *CaseObservation {
	if in == nil {
		return nil
	}
	out := new(CaseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CaseParameters) DeepCopyInto(out *CaseParameters) {
	*out = *in
	if in.Notifications != nil {
		in, out := &in.Notifications, &out.Notifications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CaseParameters.
func (in *CaseParameters) DeepCopy() *CaseParameters {
	if in == nil {
		return nil
	}
	out := new(CaseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRule) DeepCopyInto(out *DefaultRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRule.
func (in *DefaultRule) DeepCopy() *DefaultRule {
	if in == nil {
		return nil
	}
	out := new(DefaultRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DefaultRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRuleInitParameters) DeepCopyInto(out *DefaultRuleInitParameters) {
	*out = *in
	if in.Case != nil {
		in, out := &in.Case, &out.Case
		*out = make([]CaseInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]FilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]OptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRuleInitParameters.
func (in *DefaultRuleInitParameters) DeepCopy() *DefaultRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRuleList) DeepCopyInto(out *DefaultRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DefaultRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRuleList.
func (in *DefaultRuleList) DeepCopy() *DefaultRuleList {
	if in == nil {
		return nil
	}
	out := new(DefaultRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DefaultRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRuleObservation) DeepCopyInto(out *DefaultRuleObservation) {
	*out = *in
	if in.Case != nil {
		in, out := &in.Case, &out.Case
		*out = make([]CaseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]FilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]OptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRuleObservation.
func (in *DefaultRuleObservation) DeepCopy() *DefaultRuleObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRuleParameters) DeepCopyInto(out *DefaultRuleParameters) {
	*out = *in
	if in.Case != nil {
		in, out := &in.Case, &out.Case
		*out = make([]CaseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]FilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]OptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRuleParameters.
func (in *DefaultRuleParameters) DeepCopy() *DefaultRuleParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRuleSpec) DeepCopyInto(out *DefaultRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRuleSpec.
func (in *DefaultRuleSpec) DeepCopy() *DefaultRuleSpec {
	if in == nil {
		return nil
	}
	out := new(DefaultRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRuleStatus) DeepCopyInto(out *DefaultRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRuleStatus.
func (in *DefaultRuleStatus) DeepCopy() *DefaultRuleStatus {
	if in == nil {
		return nil
	}
	out := new(DefaultRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExclusionFilterInitParameters) DeepCopyInto(out *ExclusionFilterInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExclusionFilterInitParameters.
func (in *ExclusionFilterInitParameters) DeepCopy() *ExclusionFilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExclusionFilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExclusionFilterObservation) DeepCopyInto(out *ExclusionFilterObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExclusionFilterObservation.
func (in *ExclusionFilterObservation) DeepCopy() *ExclusionFilterObservation {
	if in == nil {
		return nil
	}
	out := new(ExclusionFilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExclusionFilterParameters) DeepCopyInto(out *ExclusionFilterParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExclusionFilterParameters.
func (in *ExclusionFilterParameters) DeepCopy() *ExclusionFilterParameters {
	if in == nil {
		return nil
	}
	out := new(ExclusionFilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Filter) DeepCopyInto(out *Filter) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Filter.
func (in *Filter) DeepCopy() *Filter {
	if in == nil {
		return nil
	}
	out := new(Filter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Filter) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterInitParameters) DeepCopyInto(out *FilterInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterInitParameters.
func (in *FilterInitParameters) DeepCopy() *FilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(FilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterInitParameters_2) DeepCopyInto(out *FilterInitParameters_2) {
	*out = *in
	if in.ExclusionFilter != nil {
		in, out := &in.ExclusionFilter, &out.ExclusionFilter
		*out = make([]ExclusionFilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilteredDataType != nil {
		in, out := &in.FilteredDataType, &out.FilteredDataType
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterInitParameters_2.
func (in *FilterInitParameters_2) DeepCopy() *FilterInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(FilterInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterList) DeepCopyInto(out *FilterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Filter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterList.
func (in *FilterList) DeepCopy() *FilterList {
	if in == nil {
		return nil
	}
	out := new(FilterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FilterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterObservation) DeepCopyInto(out *FilterObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterObservation.
func (in *FilterObservation) DeepCopy() *FilterObservation {
	if in == nil {
		return nil
	}
	out := new(FilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterObservation_2) DeepCopyInto(out *FilterObservation_2) {
	*out = *in
	if in.ExclusionFilter != nil {
		in, out := &in.ExclusionFilter, &out.ExclusionFilter
		*out = make([]ExclusionFilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilteredDataType != nil {
		in, out := &in.FilteredDataType, &out.FilteredDataType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterObservation_2.
func (in *FilterObservation_2) DeepCopy() *FilterObservation_2 {
	if in == nil {
		return nil
	}
	out := new(FilterObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterParameters) DeepCopyInto(out *FilterParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterParameters.
func (in *FilterParameters) DeepCopy() *FilterParameters {
	if in == nil {
		return nil
	}
	out := new(FilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterParameters_2) DeepCopyInto(out *FilterParameters_2) {
	*out = *in
	if in.ExclusionFilter != nil {
		in, out := &in.ExclusionFilter, &out.ExclusionFilter
		*out = make([]ExclusionFilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilteredDataType != nil {
		in, out := &in.FilteredDataType, &out.FilteredDataType
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterParameters_2.
func (in *FilterParameters_2) DeepCopy() *FilterParameters_2 {
	if in == nil {
		return nil
	}
	out := new(FilterParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterSpec) DeepCopyInto(out *FilterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterSpec.
func (in *FilterSpec) DeepCopy() *FilterSpec {
	if in == nil {
		return nil
	}
	out := new(FilterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterStatus) DeepCopyInto(out *FilterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterStatus.
func (in *FilterStatus) DeepCopy() *FilterStatus {
	if in == nil {
		return nil
	}
	out := new(FilterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImpossibleTravelOptionsInitParameters) DeepCopyInto(out *ImpossibleTravelOptionsInitParameters) {
	*out = *in
	if in.BaselineUserLocations != nil {
		in, out := &in.BaselineUserLocations, &out.BaselineUserLocations
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImpossibleTravelOptionsInitParameters.
func (in *ImpossibleTravelOptionsInitParameters) DeepCopy() *ImpossibleTravelOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ImpossibleTravelOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImpossibleTravelOptionsObservation) DeepCopyInto(out *ImpossibleTravelOptionsObservation) {
	*out = *in
	if in.BaselineUserLocations != nil {
		in, out := &in.BaselineUserLocations, &out.BaselineUserLocations
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImpossibleTravelOptionsObservation.
func (in *ImpossibleTravelOptionsObservation) DeepCopy() *ImpossibleTravelOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(ImpossibleTravelOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImpossibleTravelOptionsParameters) DeepCopyInto(out *ImpossibleTravelOptionsParameters) {
	*out = *in
	if in.BaselineUserLocations != nil {
		in, out := &in.BaselineUserLocations, &out.BaselineUserLocations
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImpossibleTravelOptionsParameters.
func (in *ImpossibleTravelOptionsParameters) DeepCopy() *ImpossibleTravelOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(ImpossibleTravelOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewValueOptionsInitParameters) DeepCopyInto(out *NewValueOptionsInitParameters) {
	*out = *in
	if in.ForgetAfter != nil {
		in, out := &in.ForgetAfter, &out.ForgetAfter
		*out = new(float64)
		**out = **in
	}
	if in.LearningDuration != nil {
		in, out := &in.LearningDuration, &out.LearningDuration
		*out = new(float64)
		**out = **in
	}
	if in.LearningMethod != nil {
		in, out := &in.LearningMethod, &out.LearningMethod
		*out = new(string)
		**out = **in
	}
	if in.LearningThreshold != nil {
		in, out := &in.LearningThreshold, &out.LearningThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewValueOptionsInitParameters.
func (in *NewValueOptionsInitParameters) DeepCopy() *NewValueOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewValueOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewValueOptionsObservation) DeepCopyInto(out *NewValueOptionsObservation) {
	*out = *in
	if in.ForgetAfter != nil {
		in, out := &in.ForgetAfter, &out.ForgetAfter
		*out = new(float64)
		**out = **in
	}
	if in.LearningDuration != nil {
		in, out := &in.LearningDuration, &out.LearningDuration
		*out = new(float64)
		**out = **in
	}
	if in.LearningMethod != nil {
		in, out := &in.LearningMethod, &out.LearningMethod
		*out = new(string)
		**out = **in
	}
	if in.LearningThreshold != nil {
		in, out := &in.LearningThreshold, &out.LearningThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewValueOptionsObservation.
func (in *NewValueOptionsObservation) DeepCopy() *NewValueOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(NewValueOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewValueOptionsParameters) DeepCopyInto(out *NewValueOptionsParameters) {
	*out = *in
	if in.ForgetAfter != nil {
		in, out := &in.ForgetAfter, &out.ForgetAfter
		*out = new(float64)
		**out = **in
	}
	if in.LearningDuration != nil {
		in, out := &in.LearningDuration, &out.LearningDuration
		*out = new(float64)
		**out = **in
	}
	if in.LearningMethod != nil {
		in, out := &in.LearningMethod, &out.LearningMethod
		*out = new(string)
		**out = **in
	}
	if in.LearningThreshold != nil {
		in, out := &in.LearningThreshold, &out.LearningThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewValueOptionsParameters.
func (in *NewValueOptionsParameters) DeepCopy() *NewValueOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(NewValueOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsInitParameters) DeepCopyInto(out *OptionsInitParameters) {
	*out = *in
	if in.DecreaseCriticalityBasedOnEnv != nil {
		in, out := &in.DecreaseCriticalityBasedOnEnv, &out.DecreaseCriticalityBasedOnEnv
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsInitParameters.
func (in *OptionsInitParameters) DeepCopy() *OptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsObservation) DeepCopyInto(out *OptionsObservation) {
	*out = *in
	if in.DecreaseCriticalityBasedOnEnv != nil {
		in, out := &in.DecreaseCriticalityBasedOnEnv, &out.DecreaseCriticalityBasedOnEnv
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsObservation.
func (in *OptionsObservation) DeepCopy() *OptionsObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsParameters) DeepCopyInto(out *OptionsParameters) {
	*out = *in
	if in.DecreaseCriticalityBasedOnEnv != nil {
		in, out := &in.DecreaseCriticalityBasedOnEnv, &out.DecreaseCriticalityBasedOnEnv
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsParameters.
func (in *OptionsParameters) DeepCopy() *OptionsParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryInitParameters) DeepCopyInto(out *QueryInitParameters) {
	*out = *in
	if in.AgentRule != nil {
		in, out := &in.AgentRule, &out.AgentRule
		*out = make([]AgentRuleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Aggregation != nil {
		in, out := &in.Aggregation, &out.Aggregation
		*out = new(string)
		**out = **in
	}
	if in.DistinctFields != nil {
		in, out := &in.DistinctFields, &out.DistinctFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.GroupByFields != nil {
		in, out := &in.GroupByFields, &out.GroupByFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Metrics != nil {
		in, out := &in.Metrics, &out.Metrics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryInitParameters.
func (in *QueryInitParameters) DeepCopy() *QueryInitParameters {
	if in == nil {
		return nil
	}
	out := new(QueryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryObservation) DeepCopyInto(out *QueryObservation) {
	*out = *in
	if in.AgentRule != nil {
		in, out := &in.AgentRule, &out.AgentRule
		*out = make([]AgentRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Aggregation != nil {
		in, out := &in.Aggregation, &out.Aggregation
		*out = new(string)
		**out = **in
	}
	if in.DistinctFields != nil {
		in, out := &in.DistinctFields, &out.DistinctFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.GroupByFields != nil {
		in, out := &in.GroupByFields, &out.GroupByFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Metrics != nil {
		in, out := &in.Metrics, &out.Metrics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryObservation.
func (in *QueryObservation) DeepCopy() *QueryObservation {
	if in == nil {
		return nil
	}
	out := new(QueryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryParameters) DeepCopyInto(out *QueryParameters) {
	*out = *in
	if in.AgentRule != nil {
		in, out := &in.AgentRule, &out.AgentRule
		*out = make([]AgentRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Aggregation != nil {
		in, out := &in.Aggregation, &out.Aggregation
		*out = new(string)
		**out = **in
	}
	if in.DistinctFields != nil {
		in, out := &in.DistinctFields, &out.DistinctFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.GroupByFields != nil {
		in, out := &in.GroupByFields, &out.GroupByFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Metrics != nil {
		in, out := &in.Metrics, &out.Metrics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryParameters.
func (in *QueryParameters) DeepCopy() *QueryParameters {
	if in == nil {
		return nil
	}
	out := new(QueryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RootQueryInitParameters) DeepCopyInto(out *RootQueryInitParameters) {
	*out = *in
	if in.GroupByFields != nil {
		in, out := &in.GroupByFields, &out.GroupByFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RootQueryInitParameters.
func (in *RootQueryInitParameters) DeepCopy() *RootQueryInitParameters {
	if in == nil {
		return nil
	}
	out := new(RootQueryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RootQueryObservation) DeepCopyInto(out *RootQueryObservation) {
	*out = *in
	if in.GroupByFields != nil {
		in, out := &in.GroupByFields, &out.GroupByFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RootQueryObservation.
func (in *RootQueryObservation) DeepCopy() *RootQueryObservation {
	if in == nil {
		return nil
	}
	out := new(RootQueryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RootQueryParameters) DeepCopyInto(out *RootQueryParameters) {
	*out = *in
	if in.GroupByFields != nil {
		in, out := &in.GroupByFields, &out.GroupByFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RootQueryParameters.
func (in *RootQueryParameters) DeepCopy() *RootQueryParameters {
	if in == nil {
		return nil
	}
	out := new(RootQueryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Rule) DeepCopyInto(out *Rule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Rule.
func (in *Rule) DeepCopy() *Rule {
	if in == nil {
		return nil
	}
	out := new(Rule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Rule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleCaseInitParameters) DeepCopyInto(out *RuleCaseInitParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Notifications != nil {
		in, out := &in.Notifications, &out.Notifications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleCaseInitParameters.
func (in *RuleCaseInitParameters) DeepCopy() *RuleCaseInitParameters {
	if in == nil {
		return nil
	}
	out := new(RuleCaseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleCaseObservation) DeepCopyInto(out *RuleCaseObservation) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Notifications != nil {
		in, out := &in.Notifications, &out.Notifications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleCaseObservation.
func (in *RuleCaseObservation) DeepCopy() *RuleCaseObservation {
	if in == nil {
		return nil
	}
	out := new(RuleCaseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleCaseParameters) DeepCopyInto(out *RuleCaseParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Notifications != nil {
		in, out := &in.Notifications, &out.Notifications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleCaseParameters.
func (in *RuleCaseParameters) DeepCopy() *RuleCaseParameters {
	if in == nil {
		return nil
	}
	out := new(RuleCaseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleFilterInitParameters) DeepCopyInto(out *RuleFilterInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleFilterInitParameters.
func (in *RuleFilterInitParameters) DeepCopy() *RuleFilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(RuleFilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleFilterObservation) DeepCopyInto(out *RuleFilterObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleFilterObservation.
func (in *RuleFilterObservation) DeepCopy() *RuleFilterObservation {
	if in == nil {
		return nil
	}
	out := new(RuleFilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleFilterParameters) DeepCopyInto(out *RuleFilterParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleFilterParameters.
func (in *RuleFilterParameters) DeepCopy() *RuleFilterParameters {
	if in == nil {
		return nil
	}
	out := new(RuleFilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleInitParameters) DeepCopyInto(out *RuleInitParameters) {
	*out = *in
	if in.Case != nil {
		in, out := &in.Case, &out.Case
		*out = make([]RuleCaseInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]RuleFilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HasExtendedTitle != nil {
		in, out := &in.HasExtendedTitle, &out.HasExtendedTitle
		*out = new(bool)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]RuleOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]QueryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SignalQuery != nil {
		in, out := &in.SignalQuery, &out.SignalQuery
		*out = make([]SignalQueryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ThirdPartyCase != nil {
		in, out := &in.ThirdPartyCase, &out.ThirdPartyCase
		*out = make([]ThirdPartyCaseInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Validate != nil {
		in, out := &in.Validate, &out.Validate
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleInitParameters.
func (in *RuleInitParameters) DeepCopy() *RuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(RuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleList) DeepCopyInto(out *RuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Rule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleList.
func (in *RuleList) DeepCopy() *RuleList {
	if in == nil {
		return nil
	}
	out := new(RuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleObservation) DeepCopyInto(out *RuleObservation) {
	*out = *in
	if in.Case != nil {
		in, out := &in.Case, &out.Case
		*out = make([]RuleCaseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]RuleFilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HasExtendedTitle != nil {
		in, out := &in.HasExtendedTitle, &out.HasExtendedTitle
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]RuleOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]QueryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SignalQuery != nil {
		in, out := &in.SignalQuery, &out.SignalQuery
		*out = make([]SignalQueryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ThirdPartyCase != nil {
		in, out := &in.ThirdPartyCase, &out.ThirdPartyCase
		*out = make([]ThirdPartyCaseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Validate != nil {
		in, out := &in.Validate, &out.Validate
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleObservation.
func (in *RuleObservation) DeepCopy() *RuleObservation {
	if in == nil {
		return nil
	}
	out := new(RuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleOptionsInitParameters) DeepCopyInto(out *RuleOptionsInitParameters) {
	*out = *in
	if in.DecreaseCriticalityBasedOnEnv != nil {
		in, out := &in.DecreaseCriticalityBasedOnEnv, &out.DecreaseCriticalityBasedOnEnv
		*out = new(bool)
		**out = **in
	}
	if in.DetectionMethod != nil {
		in, out := &in.DetectionMethod, &out.DetectionMethod
		*out = new(string)
		**out = **in
	}
	if in.EvaluationWindow != nil {
		in, out := &in.EvaluationWindow, &out.EvaluationWindow
		*out = new(float64)
		**out = **in
	}
	if in.ImpossibleTravelOptions != nil {
		in, out := &in.ImpossibleTravelOptions, &out.ImpossibleTravelOptions
		*out = make([]ImpossibleTravelOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeepAlive != nil {
		in, out := &in.KeepAlive, &out.KeepAlive
		*out = new(float64)
		**out = **in
	}
	if in.MaxSignalDuration != nil {
		in, out := &in.MaxSignalDuration, &out.MaxSignalDuration
		*out = new(float64)
		**out = **in
	}
	if in.NewValueOptions != nil {
		in, out := &in.NewValueOptions, &out.NewValueOptions
		*out = make([]NewValueOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ThirdPartyRuleOptions != nil {
		in, out := &in.ThirdPartyRuleOptions, &out.ThirdPartyRuleOptions
		*out = make([]ThirdPartyRuleOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleOptionsInitParameters.
func (in *RuleOptionsInitParameters) DeepCopy() *RuleOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RuleOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleOptionsObservation) DeepCopyInto(out *RuleOptionsObservation) {
	*out = *in
	if in.DecreaseCriticalityBasedOnEnv != nil {
		in, out := &in.DecreaseCriticalityBasedOnEnv, &out.DecreaseCriticalityBasedOnEnv
		*out = new(bool)
		**out = **in
	}
	if in.DetectionMethod != nil {
		in, out := &in.DetectionMethod, &out.DetectionMethod
		*out = new(string)
		**out = **in
	}
	if in.EvaluationWindow != nil {
		in, out := &in.EvaluationWindow, &out.EvaluationWindow
		*out = new(float64)
		**out = **in
	}
	if in.ImpossibleTravelOptions != nil {
		in, out := &in.ImpossibleTravelOptions, &out.ImpossibleTravelOptions
		*out = make([]ImpossibleTravelOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeepAlive != nil {
		in, out := &in.KeepAlive, &out.KeepAlive
		*out = new(float64)
		**out = **in
	}
	if in.MaxSignalDuration != nil {
		in, out := &in.MaxSignalDuration, &out.MaxSignalDuration
		*out = new(float64)
		**out = **in
	}
	if in.NewValueOptions != nil {
		in, out := &in.NewValueOptions, &out.NewValueOptions
		*out = make([]NewValueOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ThirdPartyRuleOptions != nil {
		in, out := &in.ThirdPartyRuleOptions, &out.ThirdPartyRuleOptions
		*out = make([]ThirdPartyRuleOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleOptionsObservation.
func (in *RuleOptionsObservation) DeepCopy() *RuleOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(RuleOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleOptionsParameters) DeepCopyInto(out *RuleOptionsParameters) {
	*out = *in
	if in.DecreaseCriticalityBasedOnEnv != nil {
		in, out := &in.DecreaseCriticalityBasedOnEnv, &out.DecreaseCriticalityBasedOnEnv
		*out = new(bool)
		**out = **in
	}
	if in.DetectionMethod != nil {
		in, out := &in.DetectionMethod, &out.DetectionMethod
		*out = new(string)
		**out = **in
	}
	if in.EvaluationWindow != nil {
		in, out := &in.EvaluationWindow, &out.EvaluationWindow
		*out = new(float64)
		**out = **in
	}
	if in.ImpossibleTravelOptions != nil {
		in, out := &in.ImpossibleTravelOptions, &out.ImpossibleTravelOptions
		*out = make([]ImpossibleTravelOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeepAlive != nil {
		in, out := &in.KeepAlive, &out.KeepAlive
		*out = new(float64)
		**out = **in
	}
	if in.MaxSignalDuration != nil {
		in, out := &in.MaxSignalDuration, &out.MaxSignalDuration
		*out = new(float64)
		**out = **in
	}
	if in.NewValueOptions != nil {
		in, out := &in.NewValueOptions, &out.NewValueOptions
		*out = make([]NewValueOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ThirdPartyRuleOptions != nil {
		in, out := &in.ThirdPartyRuleOptions, &out.ThirdPartyRuleOptions
		*out = make([]ThirdPartyRuleOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleOptionsParameters.
func (in *RuleOptionsParameters) DeepCopy() *RuleOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(RuleOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleParameters) DeepCopyInto(out *RuleParameters) {
	*out = *in
	if in.Case != nil {
		in, out := &in.Case, &out.Case
		*out = make([]RuleCaseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]RuleFilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HasExtendedTitle != nil {
		in, out := &in.HasExtendedTitle, &out.HasExtendedTitle
		*out = new(bool)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]RuleOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]QueryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SignalQuery != nil {
		in, out := &in.SignalQuery, &out.SignalQuery
		*out = make([]SignalQueryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ThirdPartyCase != nil {
		in, out := &in.ThirdPartyCase, &out.ThirdPartyCase
		*out = make([]ThirdPartyCaseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Validate != nil {
		in, out := &in.Validate, &out.Validate
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleParameters.
func (in *RuleParameters) DeepCopy() *RuleParameters {
	if in == nil {
		return nil
	}
	out := new(RuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleSpec) DeepCopyInto(out *RuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleSpec.
func (in *RuleSpec) DeepCopy() *RuleSpec {
	if in == nil {
		return nil
	}
	out := new(RuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleStatus) DeepCopyInto(out *RuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleStatus.
func (in *RuleStatus) DeepCopy() *RuleStatus {
	if in == nil {
		return nil
	}
	out := new(RuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SignalQueryInitParameters) DeepCopyInto(out *SignalQueryInitParameters) {
	*out = *in
	if in.Aggregation != nil {
		in, out := &in.Aggregation, &out.Aggregation
		*out = new(string)
		**out = **in
	}
	if in.CorrelatedByFields != nil {
		in, out := &in.CorrelatedByFields, &out.CorrelatedByFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CorrelatedQueryIndex != nil {
		in, out := &in.CorrelatedQueryIndex, &out.CorrelatedQueryIndex
		*out = new(string)
		**out = **in
	}
	if in.DefaultRuleID != nil {
		in, out := &in.DefaultRuleID, &out.DefaultRuleID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RuleID != nil {
		in, out := &in.RuleID, &out.RuleID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SignalQueryInitParameters.
func (in *SignalQueryInitParameters) DeepCopy() *SignalQueryInitParameters {
	if in == nil {
		return nil
	}
	out := new(SignalQueryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SignalQueryObservation) DeepCopyInto(out *SignalQueryObservation) {
	*out = *in
	if in.Aggregation != nil {
		in, out := &in.Aggregation, &out.Aggregation
		*out = new(string)
		**out = **in
	}
	if in.CorrelatedByFields != nil {
		in, out := &in.CorrelatedByFields, &out.CorrelatedByFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CorrelatedQueryIndex != nil {
		in, out := &in.CorrelatedQueryIndex, &out.CorrelatedQueryIndex
		*out = new(string)
		**out = **in
	}
	if in.DefaultRuleID != nil {
		in, out := &in.DefaultRuleID, &out.DefaultRuleID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RuleID != nil {
		in, out := &in.RuleID, &out.RuleID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SignalQueryObservation.
func (in *SignalQueryObservation) DeepCopy() *SignalQueryObservation {
	if in == nil {
		return nil
	}
	out := new(SignalQueryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SignalQueryParameters) DeepCopyInto(out *SignalQueryParameters) {
	*out = *in
	if in.Aggregation != nil {
		in, out := &in.Aggregation, &out.Aggregation
		*out = new(string)
		**out = **in
	}
	if in.CorrelatedByFields != nil {
		in, out := &in.CorrelatedByFields, &out.CorrelatedByFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CorrelatedQueryIndex != nil {
		in, out := &in.CorrelatedQueryIndex, &out.CorrelatedQueryIndex
		*out = new(string)
		**out = **in
	}
	if in.DefaultRuleID != nil {
		in, out := &in.DefaultRuleID, &out.DefaultRuleID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RuleID != nil {
		in, out := &in.RuleID, &out.RuleID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SignalQueryParameters.
func (in *SignalQueryParameters) DeepCopy() *SignalQueryParameters {
	if in == nil {
		return nil
	}
	out := new(SignalQueryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThirdPartyCaseInitParameters) DeepCopyInto(out *ThirdPartyCaseInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Notifications != nil {
		in, out := &in.Notifications, &out.Notifications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThirdPartyCaseInitParameters.
func (in *ThirdPartyCaseInitParameters) DeepCopy() *ThirdPartyCaseInitParameters {
	if in == nil {
		return nil
	}
	out := new(ThirdPartyCaseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThirdPartyCaseObservation) DeepCopyInto(out *ThirdPartyCaseObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Notifications != nil {
		in, out := &in.Notifications, &out.Notifications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThirdPartyCaseObservation.
func (in *ThirdPartyCaseObservation) DeepCopy() *ThirdPartyCaseObservation {
	if in == nil {
		return nil
	}
	out := new(ThirdPartyCaseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThirdPartyCaseParameters) DeepCopyInto(out *ThirdPartyCaseParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Notifications != nil {
		in, out := &in.Notifications, &out.Notifications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThirdPartyCaseParameters.
func (in *ThirdPartyCaseParameters) DeepCopy() *ThirdPartyCaseParameters {
	if in == nil {
		return nil
	}
	out := new(ThirdPartyCaseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThirdPartyRuleOptionsInitParameters) DeepCopyInto(out *ThirdPartyRuleOptionsInitParameters) {
	*out = *in
	if in.DefaultNotifications != nil {
		in, out := &in.DefaultNotifications, &out.DefaultNotifications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultStatus != nil {
		in, out := &in.DefaultStatus, &out.DefaultStatus
		*out = new(string)
		**out = **in
	}
	if in.RootQuery != nil {
		in, out := &in.RootQuery, &out.RootQuery
		*out = make([]RootQueryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SignalTitleTemplate != nil {
		in, out := &in.SignalTitleTemplate, &out.SignalTitleTemplate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThirdPartyRuleOptionsInitParameters.
func (in *ThirdPartyRuleOptionsInitParameters) DeepCopy() *ThirdPartyRuleOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ThirdPartyRuleOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThirdPartyRuleOptionsObservation) DeepCopyInto(out *ThirdPartyRuleOptionsObservation) {
	*out = *in
	if in.DefaultNotifications != nil {
		in, out := &in.DefaultNotifications, &out.DefaultNotifications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultStatus != nil {
		in, out := &in.DefaultStatus, &out.DefaultStatus
		*out = new(string)
		**out = **in
	}
	if in.RootQuery != nil {
		in, out := &in.RootQuery, &out.RootQuery
		*out = make([]RootQueryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SignalTitleTemplate != nil {
		in, out := &in.SignalTitleTemplate, &out.SignalTitleTemplate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThirdPartyRuleOptionsObservation.
func (in *ThirdPartyRuleOptionsObservation) DeepCopy() *ThirdPartyRuleOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(ThirdPartyRuleOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThirdPartyRuleOptionsParameters) DeepCopyInto(out *ThirdPartyRuleOptionsParameters) {
	*out = *in
	if in.DefaultNotifications != nil {
		in, out := &in.DefaultNotifications, &out.DefaultNotifications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultStatus != nil {
		in, out := &in.DefaultStatus, &out.DefaultStatus
		*out = new(string)
		**out = **in
	}
	if in.RootQuery != nil {
		in, out := &in.RootQuery, &out.RootQuery
		*out = make([]RootQueryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SignalTitleTemplate != nil {
		in, out := &in.SignalTitleTemplate, &out.SignalTitleTemplate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThirdPartyRuleOptionsParameters.
func (in *ThirdPartyRuleOptionsParameters) DeepCopy() *ThirdPartyRuleOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(ThirdPartyRuleOptionsParameters)
	in.DeepCopyInto(out)
	return out
}
